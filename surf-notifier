import time

import pyautogui
import pygetwindow as gw
from selenium import webdriver
from selenium.webdriver.common.by import By

from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC


import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

# Initialize the browser driver
options = webdriver.ChromeOptions()
#options.add_argument('--headless')
driver = webdriver.Chrome(options=options)

# Navigate to the website
driver.get("https"
           "://www.surf-forecast.com/breaks/Rest-Bay/forecasts/latest/six_day")

# Handle cookie consent
cookie = WebDriverWait(driver, 1).until(EC.element_to_be_clickable((By.XPATH, '//*[@id="qc-cmp2-ui"]/div[2]/div/button[2]')))
cookie.click()

# Define the XPath of the element you want to extract text from
next_best_surf_xpath = '//*[@id="contdiv"]/div[4]/div[1]/div[2]/section/div/table/tbody/tr[1]/td[2]/span'
wave_height = '//*[@id="contdiv"]/div[4]/div[1]/div[2]/section/div/table/tbody/tr[1]/td[3]/b'
wave_period = '//*[@id="contdiv"]/div[4]/div[1]/div[2]/section/div/table/tbody/tr[1]/td[3]/span/b'

paragraph = '//*[@id="contdiv"]/div[4]/div[1]/div[1]/div/p[1]'

# Find the element using the XPath
next_best_surf_element = WebDriverWait(driver, 10).until(EC.visibility_of_element_located((By.XPATH, next_best_surf_xpath)))
wave_height = WebDriverWait(driver, 10).until(EC.visibility_of_element_located((By.XPATH, wave_height)))
wave_period = WebDriverWait(driver, 10).until(EC.visibility_of_element_located((By.XPATH, wave_period)))
paragraph = WebDriverWait(driver, 10).until(EC.visibility_of_element_located((By.XPATH, paragraph)))
# Extract the text content from the element
next_best_surf_text = next_best_surf_element.text
wave_height = wave_height.text
wave_period = wave_period.text
paragraph = paragraph.text

# Print the extracted text
surf_text = (f"Porthcawl Rest Bay. Next best surf: {next_best_surf_text} \n"
      f"Wave height: {wave_height} \n"
      f"Wave period: {wave_period} \n"
      f"Paragraph: {paragraph}\n"
      "check the tide times here https://www.bbc.co.uk/weather/coast-and-sea/tide-tables/11/512#2024-05-01")



print(surf_text)

# Close the browser
driver.quit()




# Function to send an email
# def send_email(sender_email, sender_password, receiver_email, subject, body):
#     # Create a multipart message
#     msg = MIMEMultipart()
#     msg['From'] = sender_email
#     msg['To'] = receiver_email
#     msg['Subject'] = subject
#
#     # Attach the body of the email
#     msg.attach(MIMEText(body, 'plain'))
#
#     # Connect to the SMTP server and send the email
#     with smtplib.SMTP('smtp.gmail.com', 587) as server:  # Using Gmail SMTP server
#         server.starttls()  # Secure the connection
#         server.login(sender_email, sender_password)
#         server.sendmail(sender_email, receiver_email, msg.as_string())
#
# # Define email parameters
# sender_email = 'jpdev191795@yahoo.com'
# sender_password = 'Typwmp191795!'
# receiver_email = 'bigfish7829@gmail.com'
# subject = 'Test Email'
# body = surf_text
#
# # Send the email
# send_email(sender_email, sender_password, receiver_email, subject, body)



# pip install pywhatkit
import pywhatkit as kit

# Specify the phone number (with country code) and the message
phone_number = "+447952888156"
message = surf_text + "Sent from Python!"

# Send the message instantly
kit.sendwhatmsg_instantly(phone_number, message)

# Wait for the page to load and message to type
time.sleep(7)

# Bring Chrome (or your browser) to the front
# You can adjust this title based on your browser or system
tiles = gw.getAllTitles()
for tile in tiles:
    if tile == "Google Chrome":
        tile.activate()

# Wait briefly after activating
time.sleep(1)

# Now press Enter to send
pyautogui.press("enter")
