import os
import requests
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

# --- Set up headless Chrome for GitHub Actions ---
options = Options()
options.add_argument('--headless')
options.add_argument('--no-sandbox')
options.add_argument('--disable-dev-shm-usage')
driver = webdriver.Chrome(options=options)

# --- Navigate to Surf Forecast page ---
driver.get("https://www.surf-forecast.com/breaks/Rest-Bay/forecasts/latest/six_day")

# Accept cookie popup
cookie_button = WebDriverWait(driver, 5).until(
    EC.element_to_be_clickable((By.XPATH, '//*[@id="qc-cmp2-ui"]/div[2]/div/button[2]'))
)
cookie_button.click()

# --- Extract forecast data ---
next_best_surf = WebDriverWait(driver, 10).until(
    EC.visibility_of_element_located((By.XPATH, '//*[@id="contdiv"]/div[4]/div[1]/div[2]/section/div/table/tbody/tr[1]/td[2]/span'))
).text

wave_height = WebDriverWait(driver, 10).until(
    EC.visibility_of_element_located((By.XPATH, '//*[@id="contdiv"]/div[4]/div[1]/div[2]/section/div/table/tbody/tr[1]/td[3]/b'))
).text

wave_period = WebDriverWait(driver, 10).until(
    EC.visibility_of_element_located((By.XPATH, '//*[@id="contdiv"]/div[4]/div[1]/div[2]/section/div/table/tbody/tr[1]/td[3]/span/b'))
).text

paragraph = WebDriverWait(driver, 10).until(
    EC.visibility_of_element_located((By.XPATH, '//*[@id="contdiv"]/div[4]/div[1]/div[1]/div/p[1]'))
).text

driver.quit()

# --- Format surf report ---
surf_text = (
    f"üåä *Porthcawl Rest Bay Surf Forecast*\n\n"
    f"*Next best surf:* {next_best_surf}\n"
    f"*Wave height:* {wave_height}\n"
    f"*Wave period:* {wave_period}\n\n"
    f"_{paragraph}_\n\n"
    "üìç [Check tide times](https://www.bbc.co.uk/weather/coast-and-sea/tide-tables/11/512)"
)

# --- Send via Telegram ---
def send_telegram_message(text):
    token = os.getenv("TELEGRAM_TOKEN")
    chat_id = os.getenv("TELEGRAM_CHAT_ID")
    url = f"https://api.telegram.org/bot{token}/sendMessage"
    payload = {
        "chat_id": chat_id,
        "text": text,
        "parse_mode": "Markdown"
    }
    response = requests.post(url, data=payload)
    print("Telegram status:", response.status_code)
    if response.status_code != 200:
        print("Error:", response.text)

send_telegram_message(surf_text)
